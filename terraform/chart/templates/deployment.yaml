apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-backend
  labels:
    app: {{ .Values.appName }}
    tier: backend
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
      tier: backend
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        tier: backend
    spec:
      containers:
      - name: spring-boot-container
        image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
        ports:
        - containerPort: 8080
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
        env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: SPRING_DATASOURCE_URL
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_USERNAME
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_PASSWORD
        # Variables alternatives pour compatibilité
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.rds.name }}
              key: DB_PORT
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5

{{- if not (hasKey .Values "backend" ) or .Values.backend.enabled | default true }}
# Le backend est déployé par défaut, sauf si backend.enabled=false
{{- end }}

{{- if not (hasKey .Values "frontend") or .Values.frontend.enabled | default true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-frontend
  labels:
    app: {{ .Values.appName }}
    tier: frontend
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
      tier: frontend
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        tier: frontend
    spec:
      containers:
      - name: react-container
        image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
        ports:
        - containerPort: 80
        resources:
          {{- toYaml .Values.frontend.resources | nindent 12 }}
{{- end }} 